[theme]

# The preset Streamlit theme that your custom theme inherits from.
#
# This can be one of the following: "light" or "dark".
base = "dark"

# Primary accent color.
primaryColor = "#595858ff"

# Background color of the app.
backgroundColor = "#0a0a0a"

# Background color used for most interactive widgets.
secondaryBackgroundColor = "#1a1a1a"

# Color used for almost all text.
textColor = "white"

# Color used for all links.
# linkColor =

# Whether or not links should be displayed with an underline.
# linkUnderline =

# Background color used for code blocks.
# codeBackgroundColor =

# The font family for all text, except code blocks.
#
# This can be one of the following:
# - "sans-serif"
# - "serif"
# - "monospace"
# - The `family` value for a custom font table under [[theme.fontFaces]]
# - A comma-separated list of these (as a single string) to specify
#   fallbacks
#
# For example, you can use the following:
#
# font = "cool-font, fallback-cool-font, sans-serif"
font = "sans-serif"

# An array of fonts to use in your app.
#
# Each font in the array is a table (dictionary) that can have the
# following attributes, closely resembling CSS font-face definitions:
# - family
# - url
# - weight (optional)
# - style (optional)
# - unicodeRange (optional)
#
# To host a font with your app, enable static file serving with
# `server.enableStaticServing=true`.
#
# You can define multiple [[theme.fontFaces]] tables, including multiple
# tables with the same family if your font is defined by multiple files.
#
# For example, a font hosted with your app may have a [[theme.fontFaces]]
# table as follows:
#
# [[theme.fontFaces]]
# family = "font_name"
# url = "app/static/font_file.woff"
# weight = "400"
# style = "normal"
# fontFaces =

# The root font size (in pixels) for the app.
#
# This determines the overall scale of text and UI elements. This is a
# positive integer.
#
# If this isn't set, the font size will be 16px.
# baseFontSize =

# The root font weight for the app.
#
# This determines the overall weight of text and UI elements. This is an
# integer multiple of 100. Values can be between 100 and 600, inclusive.
#
# If this isn't set, the font weight will be set to 400 (normal weight).
# baseFontWeight =

# The font family to use for headings.
#
# This can be one of the following:
# - "sans-serif"
# - "serif"
# - "monospace"
# - The `family` value for a custom font table under [[theme.fontFaces]]
# - A comma-separated list of these (as a single string) to specify
# fallbacks
#
# If this isn't set, Streamlit uses `theme.font` for headings.
headingFont = "sans-serif"

# One or more font sizes for h1-h6 headings.
#
# If no sizes are set, Streamlit will use the default sizes for h1-h6
# headings. Heading font sizes set in [theme] are not inherited by
# [theme.sidebar]. The following sizes are used by default:
# [
#     "2.75rem", # h1 (1.5rem for sidebar)
#     "2.25rem", # h2 (1.25rem for sidebar)
#     "1.75rem", # h3 (1.125rem for sidebar)
#     "1.5rem", # h4 (1rem for sidebar)
#     "1.25rem", # h5 (0.875rem for sidebar)
#     "1rem", # h6 (0.75rem for sidebar)
# ]
#
# If you specify an array with fewer than six sizes, the unspecified
# heading sizes will be the default values. For example, you can use the
# following array to set the font sizes for h1-h3 headings while keeping
# h4-h6 headings at their default sizes:
# headingFontSizes = ["3rem", "2.875rem", "2.75rem"]
#
# Setting a single value (not in an array) will set the font size for all
# h1-h6 headings to that value:
# headingFontSizes = "2.75rem"
#
# Font sizes can be specified in pixels or rem, but rem is recommended.
# headingFontSizes =

# One or more font weights for h1-h6 headings.
#
# If no weights are set, Streamlit will use the default weights for h1-h6
# headings. Heading font weights set in [theme] are not inherited by
# [theme.sidebar]. The following weights are used by default:
# [
#     700, # h1 (bold)
#     600, # h2 (semi-bold)
#     600, # h3 (semi-bold)
#     600, # h4 (semi-bold)
#     600, # h5 (semi-bold)
#     600, # h6 (semi-bold)
# ]
#
# If you specify an array with fewer than six weights, the unspecified
# heading weights will be the default values. For example, you can use
# the following array to set the font weights for h1-h2 headings while
# keeping h3-h6 headings at their default weights:
# headingFontWeights = [800, 700]
#
# Setting a single value (not in an array) will set the font weight for
# all h1-h6 headings to that value:
# headingFontWeights = 500
# headingFontWeights =

# The font family to use for code (monospace) in the sidebar.
#
# This can be one of the following:
# - "sans-serif"
# - "serif"
# - "monospace"
# - The `family` value for a custom font table under [[theme.fontFaces]]
# - A comma-separated list of these (as a single string) to specify
#   fallbacks
codeFont = "monospace"

# The font size (in pixels or rem) for code blocks and code text.
#
# This applies to font in code blocks, `st.json`, and `st.help`. It
# doesn't apply to inline code, which is set by default to 0.75em.
#
# If this isn't set, the code font size will be 0.875rem.
# codeFontSize =

# The font weight for code blocks and code text.
#
# This applies to font in inline code, code blocks, `st.json`, and
# `st.help`. This is an integer multiple of 100. Values can be between
# 100 and 900, inclusive.
#
# If this isn't set, the code font weight will be 400 (normal weight).
# codeFontWeight =

# The radius used as basis for the corners of most UI elements.
#
# This can be one of the following:
# - "none"
# - "small"
# - "medium"
# - "large"
# - "full"
# - The number in pixels or rem.
#
# For example, you can use "10px", "0.5rem", or "2rem". To follow best
# practices, use rem instead of pixels when specifying a numeric size.
# baseRadius =

# The radius used as basis for the corners of buttons.
#
# This can be one of the following:
# - "none"
# - "small"
# - "medium"
# - "large"
# - "full"
# - The number in pixels or rem.
#
# For example, you can use "10px", "0.5rem", or "2rem". To follow best
# practices, use rem instead of pixels when specifying a numeric size.
#
# If this isn't set, Streamlit uses `theme.baseRadius` instead.
# buttonRadius =

# The color of the border around elements.
# borderColor =

# The color of the border around dataframes and tables.
#
# If this isn't set, Streamlit uses `theme.borderColor` instead.
# dataframeBorderColor =

# The background color of the dataframe's header.
#
# This color applies to all non-interior cells of the dataframe. This
# includes the header row, the row-selection column (if present), and
# the bottom row of data editors with a dynamic number of rows. If this
# isn't set, Streamlit uses a mix of `theme.backgroundColor` and
# `theme.secondaryBackgroundColor`.
# dataframeHeaderBackgroundColor =

# Whether to show a border around input widgets.
# showWidgetBorder =

# Whether to show a vertical separator between the sidebar and the main
# content area.
# showSidebarBorder =

# An array of colors to use for categorical chart data.
#
# This is a list of one or more color strings which are applied in order
# to categorical data. These colors apply to Plotly, Altair, and
# Vega-Lite charts.
#
# Invalid colors are skipped, and colors repeat cyclically if there are
# more categories than colors. If no chart categorical colors are set,
# Streamlit uses a default set of colors.
#
# For light themes, the following colors are the default:
# [
#     "#0068c9", # blue80
#     "#83c9ff", # blue40
#     "#ff2b2b", # red80
#     "#ffabab", # red40
#     "#29b09d", # blueGreen80
#     "#7defa1", # green40
#     "#ff8700", # orange80
#     "#ffd16a", # orange50
#     "#6d3fc0", # purple80
#     "#d5dae5", # gray40
# ]
# For dark themes, the following colors are the default:
# [
#     "#83c9ff", # blue40
#     "#0068c9", # blue80
#     "#ffabab", # red40
#     "#ff2b2b", # red80
#     "#7defa1", # green40
#     "#29b09d", # blueGreen80
#     "#ffd16a", # orange50
#     "#ff8700", # orange80
#     "#6d3fc0", # purple80
#     "#d5dae5", # gray40
# ]
# chartCategoricalColors =

# An array of ten colors to use for sequential or continuous chart data.
#
# The ten colors create a gradient color scale. These colors apply to
# Plotly, Altair, and Vega-Lite charts.
#
# Invalid color strings are skipped. If there are not exactly ten
# valid colors specified, Streamlit uses a default set of colors.
#
# For light themes, the following colors are the default:
# [
#     "#e4f5ff", #blue10
#     "#c7ebff", #blue20
#     "#a6dcff", #blue30
#     "#83c9ff", #blue40
#     "#60b4ff", #blue50
#     "#3d9df3", #blue60
#     "#1c83e1", #blue70
#     "#0068c9", #blue80
#     "#0054a3", #blue90
#     "#004280", #blue100
# ]
# For dark themes, the following colors are the default:
# [
#     "#004280", #blue100
#     "#0054a3", #blue90
#     "#0068c9", #blue80
#     "#1c83e1", #blue70
#     "#3d9df3", #blue60
#     "#60b4ff", #blue50
#     "#83c9ff", #blue40
#     "#a6dcff", #blue30
#     "#c7ebff", #blue20
#     "#e4f5ff", #blue10
# ]
# chartSequentialColors =

[theme.sidebar]
font = "sans-serif"
headingFont = "sans-serif"
codeFont = "monospace"

[client]
showErrorDetails = true
#toolbarMode = "minimal"

[runner]
magicEnabled = true
fastReruns = true

[server]
headless = false
enableCORS = true
enableXsrfProtection = true

[browser]
gatherUsageStats = false 
